var TreeTable=(()=>{var f=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var x=Object.getOwnPropertyNames;var y=Object.prototype.hasOwnProperty;var v=(c,e)=>{for(var t in e)f(c,t,{get:e[t],enumerable:!0})},w=(c,e,t,o)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of x(e))!y.call(c,i)&&i!==t&&f(c,i,{get:()=>e[i],enumerable:!(o=g(e,i))||o.enumerable});return c};var k=c=>w(f({},"__esModule",{value:!0}),c);var N={};v(N,{default:()=>E});var C=`
.treetable-wrapper {
  background-color: #fdfcfb;
}

.treetable-container {
  background-color: #fdfcfb;
  border: 1px solid #e3e3e3;
  border-bottom: none;
  font-size: 12px;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", "Lucida Grande", sans-serif;
  color: #1f1f1f;
}

[role="row"] {
  display: flex;
  align-items: center;
  border-bottom: 1px solid #e3e3e3;
}

.treetable-container > [role="rowgroup"]:last-child > [role="row"]:last-child {
  border-bottom: none;
}

[role="columnheader"],
[role="cell"] {
  position: relative;
  padding: 4px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  border-right: 1px solid #e3e3e3;
  box-sizing: border-box;
}

[role="columnheader"]:last-child,
[role="cell"]:last-child {
  border-right: none;
}

[role="columnheader"][data-type="numeric"],
[role="cell"][data-type="numeric"] {
  text-align: right;
}

[role="columnheader"] {
  background-color: #f0f3fa;
  cursor: pointer;
  user-select: none;
}

[role="row"]:nth-child(odd) {
  background-color: #f0f3fa;
}

[role="row"]:nth-child(even) {
  background-color: #fdfcfb;
}

[role="row"]:not(.focused):hover {
  background-color: rgba(31, 31, 31, 0.06);
}

[role="row"].focused {
  background-color: #d3e3fd;
}

.treetable-controls {
  margin-bottom: 20px;
  display: flex;
  gap: 8px;
  align-items: center;
}

.treetable-controls input {
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", "Lucida Grande", sans-serif;
  font-size: 12px;
  padding: 4px 8px;
  border: 1px solid #e3e3e3;
  border-radius: 4px;
  background-color: #fdfcfb;
  color: #1f1f1f;
}

.treetable-controls input::placeholder {
  color: #474747;
}

.treetable-controls input:focus {
  outline: 2px solid #0b57d0;
  outline-offset: 1px;
}

.treetable-controls button {
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", "Lucida Grande", sans-serif;
  font-size: 12px;
  padding: 4px 8px;
  border: 1px solid #e3e3e3;
  border-radius: 4px;
  background-color: #fdfcfb;
  color: #1f1f1f;
  cursor: pointer;
}

.treetable-controls button:hover {
    background-color: #f0f3fa;
}

.percentage {
  color: #8f8f8f;
}

.treetable-cell--value-bar {
  position: relative;
  padding: 0 !important;
}

.treetable-cell--value-bar .text-content {
  position: relative;
  z-index: 2;
  padding: 4px;
  display: block;
  color: #1f1f1f;
}

.treetable-cell--value-bar .value-bar {
  position: absolute;
  right: 0;
  top: 0;
  height: calc(100% - 1px);
  background-color: rgb(254, 246, 213);
  border-bottom: 1px solid #facd15;
  z-index: 1;
}

.activity-name {
  display: flex;
  align-items: center;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  padding-left: calc(var(--depth, 0) * 20px);
}

.source-link {
  color: #474747;
  margin-left: 16px;
  flex-shrink: 0;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  direction: rtl;
  text-align: left;
}

.activity-cell-content {
  display: flex;
  justify-content: space-between;
  align-items: center;
  overflow: hidden;
}

.color-box {
  width: 12px;
  height: 12px;
  margin-right: 4px;
  flex-shrink: 0;
  background-color: #8f8f8f; /* Default/fallback color */
  border: 1px solid #e3e3e3;
}

.color-box[data-depth="0"] {
  background-color: #a743ee;
}
.color-box[data-depth="1"] {
  background-color: #eab308;
}
.color-box[data-depth="2"] {
  background-color: #1ea446;
}

.toggle-btn {
  cursor: pointer;
    user-select: none;
    display: inline-block;
    text-align: center;
    height: 14px;
    width: 24px;
}

.icon-container {
display: inline-block;
  position: relative;
      width: 24px;
    height: 11px;
}

.icon-container:empty {
  display: none;
}

.icon-container .treetable-icon {
  top: -6px;
}

.treetable-icon {
    margin-left: 0;
    position: absolute;
    left: 0px;
    width: 24px;
    height: 24px;
}

.toggle-btn .treetable-icon {
  margin-left: 0;
}

.sort-icon--asc .treetable-icon {
  transform: rotate(180deg);
}

.toggle-placeholder {
  visibility: hidden;
}
`,u={arrowDropDown:'<svg class="treetable-icon" width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M10 12L6 8H14L10 12Z" fill="black"/></svg>',arrowCollapse:'<svg class="treetable-icon" width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M8 14V6L12 10L8 14Z" fill="black"/></svg>'},b=class{constructor(e,t={}){if(this.data=e,this.originalData=e,this.toggleAll(this.data,t.collapsed!==!1),!t.columns)throw new Error("Columns option must be provided.");this.columns=t.columns,this.columnMaxValues={},this.columns.forEach(r=>{r.type==="numeric"&&(this.columnMaxValues[r.key]=this._findMaxValue(this.data,r.key))}),this.injectStyles(),this.focusedNodeIndex=0,this.visibleNodes=[];let{sortKey:o,sortDirection:i,...s}=t;if(this.options={sortDirection:{},filter:!1,...s},this.sortKey=null,o){this.sortKey=o;let r=this.columns.find(l=>l.key===this.sortKey);this.options.sortDirection[this.sortKey]=i||(r?.type==="text"?"asc":"desc"),this._sortData()}this.totalValue=this._findMaxValue(this.data,"value")}_findMaxValue(e,t){let o=0,i=s=>{for(let r of s)r[t]>o&&(o=r[t]),r.children&&i(r.children)};return i(e),o}injectStyles(){if(document.getElementById("treetable-styles-v1"))return;let e=document.createElement("style");e.id="treetable-styles-v1",e.textContent=C,document.head.appendChild(e)}render(e){if(e&&!this.container){if(this.hostElement=document.querySelector(e),!this.hostElement){console.error("TreeTable container not found");return}this.wrapper=document.createElement("div"),this.wrapper.className="treetable-wrapper",this.hostElement.appendChild(this.wrapper),this.container=document.createElement("div"),this.container.className="treetable-container",this.container.setAttribute("role","table"),this.container.setAttribute("tabindex",0),this.thead=document.createElement("div"),this.thead.setAttribute("role","rowgroup"),this.tbody=document.createElement("div"),this.tbody.setAttribute("role","rowgroup"),this.container.appendChild(this.thead),this.container.appendChild(this.tbody),this.wrapper.appendChild(this.container),this.container.addEventListener("keydown",t=>this.handleKeyPress(t)),this.options.filter&&this.createFilterControl()}if(!this.container){console.error("TreeTable container not set. Call render() with a selector on the first render.");return}this.thead.innerHTML="",this.tbody.innerHTML="",this.visibleNodes=[],this.createHeader(),this.data.forEach(t=>this.renderNode(t,0)),this.updateFocus()}createHeader(){let e=document.createElement("div");e.setAttribute("role","row"),this.columns.forEach(t=>{let o=document.createElement("div");o.setAttribute("role","columnheader"),o.textContent=t.header,o.style.flexBasis=t.basis,o.dataset.key=t.key,o.dataset.type=t.type,o.classList.add("treetable-header"),o.addEventListener("click",()=>this.sort(t.key)),e.appendChild(o)}),this.thead.appendChild(e),this.updateSortIndicators()}renderNode(e,t){let o=document.createElement("div");o.setAttribute("role","row"),o.style.setProperty("--depth",t);let i=this.visibleNodes.length;this.visibleNodes.push(e),i===this.focusedNodeIndex&&o.classList.add("focused"),o.addEventListener("click",()=>{this.focusedNodeIndex=i,this.updateFocus()}),o.title=this.columns.map(s=>`${s.header}: ${e[s.key]}`).join(`
`),this.columns.forEach(s=>{let r=document.createElement("div");if(r.setAttribute("role","cell"),r.style.flexBasis=s.basis,r.dataset.type=s.type,r.classList.add("treetable-cell"),s.isTreeColumn){let l=document.createElement("div");l.className="activity-cell-content";let a=document.createElement("div");if(a.className="activity-name",e.children&&e.children.length>0){let n=document.createElement("span");n.className="toggle-btn";let p=e.collapsed?u.arrowCollapse:u.arrowDropDown;n.innerHTML=`<div class="icon-container">${p}</div>`,n.addEventListener("click",m=>{m.stopPropagation(),this.toggleNode(e)}),a.appendChild(n)}else{let n=document.createElement("span");n.className="toggle-btn toggle-placeholder",a.appendChild(n)}let d=document.createElement("div");d.className="color-box",d.dataset.depth=t,a.appendChild(d);let h=document.createElement("span");if(h.textContent=e[s.key],a.appendChild(h),l.appendChild(a),s.secondaryKey&&e[s.secondaryKey]){let n=document.createElement("span");n.className="source-link",n.textContent=e[s.secondaryKey],l.appendChild(n)}r.appendChild(l)}else if(s.type==="numeric"){r.classList.add("treetable-cell--value-bar");let l=e[s.key],a=this.columnMaxValues[s.key],d=a>0?l/a*100:0,h=`<span>${typeof l=="number"?l.toFixed(1):l}</span>`;s.hidePercentage!==!0&&(h+=` <span class="percentage">(${d.toFixed(1)}%)</span>`);let n=document.createElement("div");n.className="text-content",n.innerHTML=h;let p=document.createElement("div");p.className="value-bar",p.style.width=`${d.toFixed(1)}%`,r.appendChild(n),r.appendChild(p)}else r.textContent=e[s.key]||"";o.appendChild(r)}),this.tbody.appendChild(o),e.children&&!e.collapsed&&e.children.forEach(s=>this.renderNode(s,t+1))}updateFocus(){this.container.querySelectorAll('[role="row"]').forEach((t,o)=>{t.parentElement.getAttribute("role")!=="rowgroup"||o===0||(o-1===this.focusedNodeIndex?(t.classList.add("focused"),t.scrollIntoView({block:"nearest"})):t.classList.remove("focused"))})}updateSortIndicators(){this.thead.querySelectorAll('[role="columnheader"]').forEach(t=>{let o=t.querySelector(".icon-container");o||(o=document.createElement("span"),o.className="icon-container",t.appendChild(o)),o.innerHTML="",t.classList.remove("sort-asc","sort-desc");let i=t.dataset.key;if(this.sortKey===i){o.innerHTML=u.arrowDropDown;let s=`sort-${this.options.sortDirection[i]}`;t.classList.add(s),this.options.sortDirection[i]==="asc"?o.classList.add("sort-icon--asc"):o.classList.remove("sort-icon--asc")}else o.classList.remove("sort-icon--asc")})}handleKeyPress(e){if(e.metaKey&&e.key==="f"||e.target===this.filterInput||(e.preventDefault(),this.visibleNodes.length===0))return;let t=this.visibleNodes[this.focusedNodeIndex];switch(e.key){case"ArrowUp":this.focusedNodeIndex>0&&(this.focusedNodeIndex--,this.updateFocus());break;case"ArrowDown":this.focusedNodeIndex<this.visibleNodes.length-1&&(this.focusedNodeIndex++,this.updateFocus());break;case"ArrowRight":t.children&&t.children.length>0&&(t.collapsed?this.toggleNode(t):this.focusedNodeIndex<this.visibleNodes.length-1&&(this.focusedNodeIndex++,this.updateFocus()));break;case"ArrowLeft":if(t.children&&!t.collapsed)this.toggleNode(t);else{let o=this.findParent(t,this.originalData);if(o){let i=this.visibleNodes.indexOf(o);i>-1&&(this.focusedNodeIndex=i,this.updateFocus())}}break}}findParent(e,t){for(let o of t)if(o.children){if(o.children.includes(e))return o;let i=this.findParent(e,o.children);if(i)return i}return null}filter(e){let t=e.toLowerCase(),o=this.filterData(this.originalData,t);this.data=o,this.render()}filterData(e,t){return e.map(o=>{let i=o.children?this.filterData(o.children,t):null;if(o.name.toLowerCase().includes(t)||i&&i.length>0){let s={...o};return i&&(s.children=i),s}return null}).filter(Boolean)}toggleNode(e){e.collapsed=!e.collapsed,this.render()}expandAll(){this.toggleAll(this.data,!1),this.render()}collapseAll(){this.toggleAll(this.data,!0),this.render()}toggleAll(e,t){for(let o of e)o.collapsed=t,o.children&&this.toggleAll(o.children,t)}_sortData(){if(!this.sortKey)return;let e=this.options.sortDirection[this.sortKey]==="asc"?1:-1,t=this.columns.find(i=>i.key===this.sortKey);if(!t)return;let o=i=>{i&&(i.sort((s,r)=>{let l=s[this.sortKey],a=r[this.sortKey];return t.type==="text"?(l||"").localeCompare(a||"")*e:(parseFloat(l||0)-parseFloat(a||0))*e}),i.forEach(s=>{s.children&&o(s.children)}))};o(this.data)}sort(e){this.sortKey===e?this.options.sortDirection[e]=this.options.sortDirection[e]==="asc"?"desc":"asc":(this.sortKey=e,this.columns.find(o=>o.key===e).type==="text"?this.options.sortDirection[e]="asc":this.options.sortDirection[e]="desc"),this._sortData(),this.render()}createFilterControl(){let e=document.createElement("div");e.className="treetable-controls";let t=document.createElement("input");t.type="text",t.placeholder="Filter...",t.addEventListener("input",s=>this.filter(s.target.value)),t.addEventListener("blur",()=>this.container.focus()),e.appendChild(t);let o=document.createElement("button");o.textContent="Collapse All",o.addEventListener("click",()=>this.collapseAll()),e.appendChild(o);let i=document.createElement("button");return i.textContent="Expand All",i.addEventListener("click",()=>this.expandAll()),e.appendChild(i),this.wrapper.insertBefore(e,this.container),this.filterInput=t,e}},E=b;return k(N);})();
